version: "3.9"

services:

  django:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
    env_file:
      - .env.development
    container_name: django
    command: sh ./docker/web_entrypoint.sh
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      {%- if cookiecutter.use_celery == 'y' %}
      - {{cookiecutter.broker}}
      - {{cookiecutter.backend}}
      {% endif %}
    restart: on-failure

  {% if cookiecutter.database == 'postgresql' %}
  db:
    image: postgres:14.1
    container_name: postgres
    environment:
      - POSTGRES_DB={{cookiecutter.database_name}}
      - POSTGRES_USER={{cookiecutter.database_user}}
      - POSTGRES_PASSWORD={{cookiecutter.database_password}}
    ports:
      - 5432:5432
    volumes:
      - database:/var/lib/postgresql/

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: 'pg_pass'
    ports:
      - "5050:80"
  {%- endif -%}

  {% if cookiecutter.database == 'mysql' %}
  db:
    image: mysql:5.7
    restart: always
    environment:
      - MYSQL_DATABASE={{cookiecutter.database_name}}
      - MYSQL_USER={{cookiecutter.database_user}}
      - MYSQL_PASSWORD={{cookiecutter.database_password}}
      - MYSQL_ROOT_PASSWORD={{cookiecutter.database_password}}
    ports:
      - "3306:3306"
    volumes:
      - .database:/var/lib/mysql
  {%- endif -%}

  {% if cookiecutter.database == 'mongodb' %}
  db:
    image: mongo
    restart: always
    hostname: mongodb
    ports:
      - "27017:27017"
    volumes:
      - .database:/var/lib/mongodb
  {%- endif -%}

  {%- if cookiecutter.use_celery == 'y' %}

  {% if cookiecutter.broker == 'rabbitmq' or cookiecutter.backend == 'rabbitmq' %}
  rabbitmq:
    image: "rabbitmq:alpine"
    container_name: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
  {%- endif %}
  
  {% if cookiecutter.broker == 'redis' or cookiecutter.backend == 'redis' %}
  redis:
    image: redis:7
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
  {% endif %}

  celery:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
    container_name: worker
    command: sh ./docker/celery_entrypoint.sh
    env_file:
      - .env.development
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    restart: on-failure

  {% if cookiecutter.use_celery_beat == 'y' %}
  beats:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
    env_file:
      - .env.development
    container_name: beats
    command: sh ./docker/beats_entrypoint.sh
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    restart: on-failure
  {%- endif -%}
  
  {% endif %}


volumes:
  database:
  {% if cookiecutter.broker == 'redis' or cookiecutter.backend == 'redis' %}
  redis-data:
  {% endif %}

